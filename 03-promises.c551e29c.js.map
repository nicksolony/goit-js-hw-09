{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEiBC,SAASC,cAAc,qBACxBD,SAASC,cAAc,oBACrBD,SAASC,cAAc,sBAFzC,IAGIC,EAASF,SAASC,cAAc,QAChCE,EAAU,GAiCd,SAASC,EAAcC,EAAUC,GAC9B,OAAO,IAAIC,SAAS,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,uBAAqBH,QAAiBC,OAE7CG,EAAK,sBAAoBJ,QAAeC,MAAU,GAEpDA,EAAM,G,CAxCfJ,EAAOY,iBAAiB,UAAWC,IASnC,IAA0BC,EAPxBD,EAAEE,iBAeJ,SAAqBC,GACnB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAKE,OAAQD,GAAG,EAAG,CAErCf,EAAce,EAAE,EADEE,SAASH,EAAKZ,OAASe,SAASF,EAAED,EAAKI,OAEzDC,MAAMC,IACJC,EAAA3B,GAAS4B,OAAOC,QAAQH,EAAM,IAEhCI,OAAOJ,IACLC,EAAA3B,GAAS4B,OAAOG,QAAQL,EAAM,G,EArBlCM,EAKwBd,EALKD,EAAEgB,OAMbC,MAAMC,KAAKjB,GACnBkB,QAAQC,GAAe,WAAVA,EAAGC,OAAiBC,SAAUC,IACnDnC,EAAQ,GAAGmC,EAAMC,QAASD,EAAMd,KAAK,IAEhCrB,GAVgC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nlet delayInput = document.querySelector('input[name=delay]');\nlet stepInput = document.querySelector('input[name=step]');\nlet amountInput = document.querySelector('input[name=amount]');\nlet formEl = document.querySelector('form'); \nlet formObj = {};\n\nformEl.addEventListener('submit', (e) => {\n\n  e.preventDefault();\n  \n  runPromises(createFormObject(e.target));\n\n});\n\n\nfunction createFormObject(formData) {\n  const formArray = Array.from(formData);\n  formArray.filter((el)=>el.type==='number').forEach ((input) => {\n    formObj[`${input.name}`]= input.value;\n  });\n  return formObj;\n};\n\nfunction runPromises(form) {\n  for (let i = 0; i < form.amount; i+=1) {\n    const stepDelay = parseInt(form.delay) + parseInt(i*form.step);\n    createPromise(i+1, stepDelay).\n    then (value => {\n      Notiflix.Notify.success(value);\n    }).\n    catch (value=>{\n      Notiflix.Notify.failure(value);\n    });  \n  };\n};\n\n\nfunction createPromise(position, delay) {\n   return new Promise ((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        } else {\n         reject(`❌ Rejected promise ${position} in ${delay}ms`);    \n        }\n      }, delay);\n    });\n};\n\n"],"names":["$7Y9D8","parcelRequire","document","querySelector","$47d4ff9957288465$var$formEl","$47d4ff9957288465$var$formObj","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","formData","preventDefault","form","i","amount","parseInt","step","then","value","$parcel$interopDefault","Notify","success","catch","failure","$47d4ff9957288465$var$runPromises","target","Array","from","filter","el","type","forEach","input","name"],"version":3,"file":"03-promises.c551e29c.js.map"}